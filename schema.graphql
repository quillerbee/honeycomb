type JobBoard {
	name: String! @id
	jobs: [Job!] @hasInverse(field: jobBoard)
	companies: [Company!] @hasInverse(field: jobBoard)
	hashtags: [HashTag!] @hasInverse(field: jobBoard)
}

type Company {
	email: String! @id @search(by: [hash])
	name: String! @search(by: [fulltext])
	jobBoard: JobBoard!
	about: String!
	logo: String!
	jobs: [Job!] @hasInverse(field: company)
}

type Job {
	id: ID!
	company: Company!
	jobBoard: JobBoard!
	title: String! @search(by: [fulltext])
	description: String!
	url: String!
	salary: Salary!
	locations: [String!]!
	timezone: TimeZone!
	flag: String
	remote: Boolean!
	hashtags: [HashTag!] @hasInverse(field: jobs)
	category: Category!
	type: Type!
	status: Status!
	created: DateTime!
}

type Salary {
	min: Int64!
	max: Int64!
	currency: String!
}

type TimeZone {
	min: Int!
	max: Int!
}

type HashTag {
	name: String! @id @search(by: [hash])
	jobs: [Job!]
	jobBoard: JobBoard!
}

enum Category {
	SoftwareDevelopment
	QualityAssurance
	GameDevelopment
	CustomerSupport
	Sales
	Marketing
	Design
	Legal
}

enum Type {
	Fulltime
	Parttime
	Contract
	Temporary
	Volunteer
	Internship
	Other
}

enum Status {
	Active
	Inactive
	Deleted
}
